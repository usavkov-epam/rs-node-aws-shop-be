service: import-service

frameworkVersion: '3'

plugins:
  - serverless-bundle
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  client:
    bucketName: rs-node-aws-import-bucket
  bundle:
    ignorePackages:
      - pg-native

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: megayuras@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
    SNSSubscriptionCount:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: yury.saukou@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          moreThan100Items:
            - true
provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1
  stage: dev
  environment:
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
           - s3:ListBucket
          Resource:
            - arn:aws:s3:::${self:custom.client.bucketName}/*
        - Effect: Allow
          Action:
            - s3:*
          Resource:
            - arn:aws:s3:::${self:custom.client.bucketName}/*
        - Effect: Allow
          Action: sqs:*
          Resource:
            Fn::GetAtt: [SQSQueue, Arn]
        - Effect: Allow
          Action: sns:*
          Resource:
            - Ref: SNSTopic

functions:
  importProductsFile:
    handler: src/functions/importProductsFile.handler
    events:
      - httpApi:
          path: /import
          method: get
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: src/functions/importFileParser.handler
    events:
      - s3:
          bucket: ${self:custom.client.bucketName}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: src/functions/catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          maximumBatchingWindow: 60
          arn:
            Fn::GetAtt: [SQSQueue, Arn]
